{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortBy","sortByOptions","handleTermChange","bind","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","search","urlToFetch","console","log","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c4d2d12.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Business.css';\n\nclass Business extends React.Component {\n    render() {\n        return (\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                    <img src={this.props.business.imageSrc} alt=''/>\n                </div>\n                <h2>{this.props.business.name}</h2>\n                <div className=\"Business-information\">\n                    <div className=\"Business-address\">\n                    <p>{this.props.business.address}</p>\n                    <p>{this.props.business.city}</p>\n                    <p>{this.props.business.state + ' ' + this.props.business.zipCode}</p>\n                    </div>\n                    <div className=\"Business-reviews\">\n                    <h3>{this.props.business.category}</h3>\n                    <h3 className=\"rating\">{this.props.business.rating + ' stars'}</h3>\n                    <p>{this.props.business.reviewCount}</p>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default Business;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './BusinessList.css';\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n    render() {\n        return (\n            <div className=\"BusinessList\">\n                {this.props.businesses.map(business => {\n                    return <Business key={business.id} business={business} />;\n                })}\n            </div>\n        );\n    }\n}\n\nexport default BusinessList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './SearchBar.css';\n\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: '',\n            location: '',\n            sortBy: 'best_match'\n        };\n        this.sortByOptions = {\n            'Best Match': 'best_match',\n            'Highest Rated': 'rating',\n            'Most Reviewed': 'review_count'\n        };\n        this.handleTermChange = this.handleTermChange.bind(this);\n        this.handleLocationChange = this.handleLocationChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    getSortByClass(sortByOption) {\n        if(this.state.sortBy === sortByOption) {\n            return 'active';\n        } else {\n            return '';\n        }\n    }\n\n    handleSortByChange(sortByOption) {\n        this.setState({sortBy: sortByOption});\n    }\n\n    handleTermChange(event) {\n        this.setState({term: event.target.value});\n    }\n\n    handleLocationChange(event) {\n        this.setState({location: event.target.value});\n    }\n\n    handleSearch(event) {\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n        event.preventDefault();\n    }\n\n    renderSortByOptions() {\n        return Object.keys(this.sortByOptions).map(sortByOption => {\n            let sortByOptionValue = this.sortByOptions[sortByOption];\n            return <li className={this.getSortByClass(sortByOptionValue)} \n                    key={sortByOptionValue}\n                    onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>;\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <div className=\"SearchBar-sort-options\">\n                    <ul>\n                        {this.renderSortByOptions()}\n                    </ul>\n                </div>\n                <div className=\"SearchBar-fields\">\n                    <input placeholder=\"Search Businesses\" \n                           onChange={this.handleTermChange}/>\n                    <input placeholder=\"Where?\" \n                           onChange={this.handleLocationChange} />\n                </div>\n                <div className=\"SearchBar-submit\">\n                    <a onClick={this.handleSearch}>Let's Go</a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","const apiKey = 'UJWRYtTHVzk4_2h4bL3GF55IwwHKboqAjS9uSIGnmiBIGbKh8yP3dGp2E_IPL1JNU_TEjjX2v1trpHV6Pk1a-_-88yQS2LNftn2-Fcu0zj7fioaJrL0lnjaGs7NoYXYx';\n\nconst Yelp = {\n    search (term, location, sortBy) {\n        const urlToFetch = `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`;\n        console.log(urlToFetch);\n        return fetch(urlToFetch, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        }).then(response => response.json()).then(jsonResponse => {\n            if (jsonResponse.businesses) {\n                console.log(jsonResponse.businesses);\n                return jsonResponse.businesses.map(business => {\n                    return {\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        category: business.categories.title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                    };\n                });\n            }\n        });\n    }\n\n};\n\nexport default Yelp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\n/*\nconst business = {\n  imageSrc: 'https://content.codecademy.com/programs/react/ravenous/pizza.jpg',\n  name: 'MarginOtto Pizzeria',\n  address: '1010 Paddington Way',\n  city: 'Flavortown',\n  state: 'NY',\n  zipCode: '10101',\n  category: 'Italian',\n  rating: 4.5,\n  reviewCount: 90\n}\n\nconst businesses = [\n  business, business, business, business, business, business\n];\n*/\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        businesses: []\n      };\n      this.searchYelp = this.searchYelp.bind(this);\n    }\n\n    searchYelp(term, location, sortBy) {\n        Yelp.search(term, location, sortBy).then((businesses) => {\n          this.setState({ businesses: businesses });\n        });\n    }\n\n    render() {\n        return (\n          <div className=\"App\">\n            <h1>ravenous</h1>\n            <SearchBar searchYelp={this.searchYelp} />\n            <BusinessList businesses={this.state.businesses} />\n          </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}